class Solution {
public:
    int maxProfitAssignment(vector<int>& d, vector<int>& p, vector<int>& w) {
        int n=d.size(),m=w.size(),mini=*min_element(w.begin(),w.end()),maxi=*max_element(w.begin(),w.end());
        int ans=0;
        vector<pair<int,int>> work;
        for(int i=0;i<n;i++){
            if( d[i]<=maxi){
                work.push_back({d[i],p[i]});
            }
        }

        if(!work.size()) return 0;
        // for(auto v:work){
        //     cout<<v.first<<" "<<v.second<<endl;
        // }
        for(auto v:w){
            int ma=0;
            for(auto l:work){
                if(l.first<=v){
                    if(l.second>ma){
                        ma=l.second;
                    }
                }
            }
         ans+=ma;
        }
        return ans;
    }
};
